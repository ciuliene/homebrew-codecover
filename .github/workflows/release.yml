name: Release


on:
  workflow_dispatch:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get latest tag
        id: get_release_tag
        run: |
          git fetch --tags
          tag_name=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Previous tag: $tag_name"
          IFS='.' read -r -a version <<< "$tag_name"
          patch=$((version[2]+1))
          new_tag="${version[0]}.${version[1]}.$patch"
          echo "New tag: $new_tag"
          echo "tag_name=$new_tag" >> "$GITHUB_OUTPUT"

      - name: Create archive
        run: |
          tar -czf codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz main.sh

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_release_tag.outputs.tag_name }}
          release_name: Release ${{ steps.get_release_tag.outputs.tag_name }}
          body: |
            Changes in this Release
          draft: false
          prerelease: false

      # - name: Upload release asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz
      #     asset_name: codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz
      #     asset_content_type: application/gzip
