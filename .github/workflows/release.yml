name: Release


on:
  workflow_dispatch:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Bump semver
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: patch

      - name: Push tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

      - name: Get new tag
        id: get_release_tag
        run: |
          git fetch --tags
          echo "tag_name=$(git describe --tags $(git rev-list --tags --max-count=1))" >> "$GITHUB_OUTPUT"

      - name: Create archive
        run: |
          tar -czf codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz main.sh

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz"

      # - name: Upload release asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz
      #     asset_name: codecover-v${{ steps.get_release_tag.outputs.tag_name }}.tar.gz
      #     asset_content_type: application/gzip
